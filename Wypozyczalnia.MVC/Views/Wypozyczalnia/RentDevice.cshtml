@model Wypozyczalnia.Application.Devices.RentDeviceViewModel
@using Wypozyczalnia.Application.Devices
@using Wypozyczalnia.Application.Devices.Queries;

<h1>Wypożycz urządzenie: @Model.DeviceName</h1>

<!-- Sekcja wyświetlania błędów walidacji -->
@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        <ul>
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <li>@error.ErrorMessage</li>
            }
        </ul>
    </div>
}

<form asp-controller="Wypozyczalnia" asp-action="ConfirmRentDevice" method="post">
    <input type="hidden" asp-for="DeviceId" />
    <div class="form-group">
        <label asp-for="StartDate">Data rozpoczęcia:</label>
        <input asp-for="StartDate" type="date" class="form-control" id="startDate" required
               value="@DateTime.Now.ToString("yyyy-MM-dd")" />
    </div>
    <div class="form-group">
        <label asp-for="EndDate">Data zakończenia (maksymalnie 14 dni):</label>
        <input asp-for="EndDate" type="date" class="form-control" id="endDate" required
               value="@DateTime.Now.ToString("yyyy-MM-dd")" />
    </div>
    <div class="form-group">
        <label>Cena dzienna:</label>
        <input asp-for="DailyPrice" type="text" class="form-control" readonly />
    </div>
    <div class="form-group">
        <label>Całkowity koszt:</label>
        <input type="text" id="totalPrice" class="form-control" readonly />
    </div>
    <button type="submit" class="btn btn-success">Potwierdź wypożyczenie</button>
</form>

<!-- Skrypt do dynamicznego obliczania liczby dni i całkowitego kosztu -->
<script>
    const startDateInput = document.getElementById('startDate');
    const endDateInput = document.getElementById('endDate');
    const totalPriceInput = document.getElementById('totalPrice');
    const dailyPrice = parseFloat(@Model.DailyPrice);

    // Domyślnie ustaw dzisiejszą datę
    const today = new Date().toISOString().split('T')[0];
    startDateInput.value = today;
    endDateInput.value = today;

    function calculateTotalPrice() {
        const startDate = new Date(startDateInput.value);
        const endDate = new Date(endDateInput.value);

        if (!isNaN(startDate) && !isNaN(endDate)) {
            const timeDiff = endDate - startDate;
            const days = Math.ceil(timeDiff / (1000 * 60 * 60 * 24));

            if (days > 0 && days <= 14) {
                totalPriceInput.value = (days * dailyPrice).toFixed(2);
            } else {
                totalPriceInput.value = "0.00";
            }
        } else {
            totalPriceInput.value = "0.00";
        }
    }

    startDateInput.addEventListener('change', calculateTotalPrice);
    endDateInput.addEventListener('change', calculateTotalPrice);
</script>
